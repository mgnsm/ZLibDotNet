name: macOS/Ubuntu/Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Build:
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup the .NET 6 & 7 SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          7.0.x

    - name: Build (.NET 6 & 7)
      run: |
        dotnet build src/ZLibDotNet/ZLibDotNet.csproj -c Release
        dotnet build tests/ZLibDotNet.UnitTests/ZLibDotNet.UnitTests.csproj -c Release -f net6.0
        dotnet build tests/ZLibDotNet.UnitTests/ZLibDotNet.UnitTests.csproj -c Release -f net7.0

    - name: Build (.NET Framework 4.6.2)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        dotnet build tests/ZLibDotNet.UnitTests/ZLibDotNet.UnitTests.csproj -c Release -f net462

    - name: Test (.NET 6 & 7)
      run: |
        dotnet test tests/ZLibDotNet.UnitTests/ZLibDotNet.UnitTests.csproj -c Release -f net6.0 --no-build --no-restore
        dotnet test tests/ZLibDotNet.UnitTests/ZLibDotNet.UnitTests.csproj -c Release -f net7.0 --no-build --no-restore

    - name: Test (.NET Framework 4.6.2)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        dotnet test tests/ZLibDotNet.UnitTests/ZLibDotNet.UnitTests.csproj -c Release -f net462 --no-build --no-restore